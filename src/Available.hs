    module Available where

    import Data.Char
    import Data.List

    data Result = Miss | Hit deriving (Show)

    data Message = Message {
        coord :: (String, String),
        result :: Maybe Result,
        prev :: Maybe Message
    } deriving (Show)

    emptyMessage = Message {coord = ("0", "0"), result = Nothing, prev = Nothing}

    -- PAGRINDINE FUNKCIJA
    available :: String -> Either String (Int, Int)
    available gameString = 
        case parseStringToMessage gameString of
            Left parseErr -> Left parseErr
            Right gameMessage -> 
                case validateForDuplicates gameMessage of 
                    Left validationErr -> Left validationErr
                    Right x -> getAvailableMoves gameMessage 100 20 100 20 True

    getAvailableMoves :: Message -> Int -> Int -> Int -> Int -> Bool -> Either String (Int, Int)
    getAvailableMoves message _ 0 _ _ _ = Right (0, 0)
    getAvailableMoves message _ _ _ 0 _ = Right (0, 0)
    getAvailableMoves Message {prev = Just previousMessage, result = Just Hit} avMov1 avHits1 avMov2 avHits2 True =
        getAvailableMoves previousMessage (avMov1 - 1) (avHits1 - 1) avMov2 avHits2 False
    getAvailableMoves Message {prev = Just previousMessage, result = Just Hit} avMov1 avHits1 avMov2 avHits2 False =
        getAvailableMoves previousMessage avMov1 avHits1 (avMov2 - 1) (avHits2 - 1) True
    getAvailableMoves Message {prev = Just previousMessage} avMov1 avHits1 avMov2 avHits2 True =
        getAvailableMoves previousMessage (avMov1 - 1) avHits1 avMov2 avHits2 False
    getAvailableMoves Message {prev = Just previousMessage} avMov1 avHits1 avMov2 avHits2 False =
        getAvailableMoves previousMessage avMov1 avHits1 (avMov2 - 1) avHits2 True
    getAvailableMoves Message {prev = Nothing, result = Just Hit} avMov1 _ avMov2 _ True = Right (avMov1 - 1, avMov2)
    getAvailableMoves Message {prev = Nothing, result = Just Hit} avMov1 _ avMov2 _ False = Right (avMov1, avMov2 -1)
    getAvailableMoves Message {prev = Nothing, coord = ("0", "0")} avMov1 _ avMov2 _ _ = Right (avMov1, avMov2)
    getAvailableMoves Message {prev = Nothing, coord = (x, y)} avMov1 _ avMov2 _ True = Right (avMov1 - 1, avMov2)
    getAvailableMoves Message {prev = Nothing, coord = (x, y)} avMov1 _ avMov2 _ False = Right (avMov1, avMov2 -1)
    getAvailableMoves _ _ _ _ _ _ = Left "Unexpected error while obtaining available moves"


    ---- PARSING FUNCTIONS

    parseString :: String -> Either String (String, String)
    parseString msg = readStr lenght $ drop (length lenghtAsStr) msg
        where
            lenghtAsStr = takeWhile isDigit msg
            lenght = read lenghtAsStr
            readStr :: Int -> String -> Either String (String, String)
            readStr n (':':m) = Right (take n m, drop n m)
            readStr _ str = Left "Key could not be parsed"

    parseStringToMessage :: String -> Either String Message
    parseStringToMessage str =
        case result of
            Left errorMsg -> Left errorMsg
            Right (message, "") -> Right message
            _ -> Left "Game string must have only one element that is an array at the top level"
        where
            result = parseGame str


    parseGame ('l' : gameString) = parseMove gameString emptyMessage
        where
            parseMove :: String -> Message -> Either String (Message, String)
            parseMove ('e' : restOfGame) message = Right (message, restOfGame)
            parseMove moveString message =
                case parseString moveString of
                    Left parseErr -> Left parseErr
                    Right (key, rest) ->
                        case parseByKey key rest message of
                            Left parseKeyErr -> Left parseKeyErr
                            Right (updatedMessage, restOfGameString) -> parseMove restOfGameString updatedMessage
    parseGame _ = Left "Letter L expected in the beginning of a game element"

    parseByKey :: String -> String -> Message -> Either String (Message, String)
    parseByKey key str message =
        case key of
            "coord" -> 
                case processCoordinates str of
                    Left e -> Left e
                    Right (coord1, coord2, rest) -> Right (message {coord = (coord1, coord2)}, rest)
            "result" -> Right (message, str)
            "prev" -> 
                case parseGame str of
                    Right (previousMessage, restStr) -> Right (message {prev = Just previousMessage}, restStr)
                    Left e -> Left e
            "HIT" -> Right (message {result = Just Hit}, str)
            "MISS" -> Right (message {result = Just Miss}, str)
            _ -> Left $ key ++ " is not a valid key"

    processCoordinates :: String -> Either String (String, String, String)
    processCoordinates ('l':'e':coordStr) = Right ("0", "0", coordStr)
    processCoordinates ('l': coordStr) = 
        case parseString coordStr of
            Left e -> Left e
            Right (coord1, rest1) -> 
                case parseString rest1 of
                    Left e -> Left e
                    Right (coord2, 'e':rest2) -> Right (coord1, coord2, rest2)
                    _ -> Left "coordinates must end with an e"
    processCoordinates _ = Left "L was expected in coordinate beginning"

    -- VERIFY IF NO DUPLICATE MOVES

    validateForDuplicates :: Message -> Either String Message
    validateForDuplicates message =
        case getPlayersCoordinates message [] [] of
            Left e -> Left e
            Right (coordArr1, coordArr2) -> 
                case checkForDuplicates coordArr1 of
                    Left e -> Left e
                    Right a ->
                        case checkForDuplicates coordArr2 of
                            Left e -> Left e
                            Right a -> Right message


    getPlayersCoordinates :: Message -> [(String, String)] -> [(String, String)] -> Either String ([(String, String)], [(String, String)])
    getPlayersCoordinates Message {prev = Nothing, coord = ("0", "0")} coordArr1 coordArr2 = Right (coordArr1, coordArr2)
    getPlayersCoordinates Message {prev = Nothing, coord = (x, y)} coordArr1 coordArr2 = 
        if length coordArr1 > length coordArr2 then Right (coordArr1, coordArr2 ++ [(x, y)]) else Right (coordArr1 ++ [(x, y)], coordArr2)
    getPlayersCoordinates Message {coord = (x, y), prev = Just prevMessage} coordArr1 coordArr2 = 
        if length coordArr1 > length coordArr2 then getPlayersCoordinates prevMessage coordArr1 (coordArr2 ++ [(x, y)]) else getPlayersCoordinates prevMessage (coordArr1 ++ [(x, y)]) coordArr2
    getPlayersCoordinates _ _ _ = Left "Error while obtaining players coordinates"

    checkForDuplicates :: [(String, String)] -> Either String Bool
    checkForDuplicates [] = Right True
    checkForDuplicates (x:xs) = 
        case findElementInArray x xs of
            Nothing -> checkForDuplicates xs
            Just (x, y) -> Left $ "Found duplicate coordinates (" ++ x ++ " , " ++ y ++ ")"

    findElementInArray :: (String, String) -> [(String, String)] -> Maybe (String, String)
    findElementInArray _ [] = Nothing
    findElementInArray (x1, y1) ((x2, y2):rest) =
        if x1 == x2 && y1 == y2 then Just (x1, y1) else findElementInArray (x1, y1) rest

    
    -- TEST DATA

    almostWonGame = "l5:coordle4:prevl6:result3:HIT5:coordl1:C1:2e4:prevl5:coordl1:I1:1e4:prevl4:prevl5:coordl1:J1:4e4:prevl4:prevl4:prevl4:prevl6:result3:HIT5:coordl1:F1:7e4:prevl5:coordl1:I1:9e6:result4:MISS4:prevl4:prevl5:coordl1:H1:4e6:result3:HIT4:prevl5:coordl1:C2:10e6:result4:MISS4:prevl5:coordl1:G1:2e6:result4:MISS4:prevl5:coordl1:G1:1e4:prevl6:result4:MISS4:prevl5:coordl1:D1:9e6:result4:MISS4:prevl5:coordl1:J2:10e4:prevl4:prevl5:coordl1:C1:4e4:prevl4:prevl5:coordl1:I1:4e6:result3:HIT4:prevl6:result4:MISS5:coordl1:J1:3e4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:B1:1e4:prevl6:result4:MISS5:coordl1:C1:9e4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:H1:7e4:prevl4:prevl5:coordl1:B1:4e4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:D1:8e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:B2:10e4:prevl4:prevl5:coordl1:I1:1e4:prevl5:coordl1:J1:6e6:result4:MISS4:prevl4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:E1:5e4:prevl5:coordl1:G1:4e4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:D1:4e6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:B1:9e4:prevl5:coordl1:D1:4e4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:F1:1e4:prevl5:coordl1:B1:6e6:result3:HIT4:prevl6:result4:MISS4:prevl5:coordl1:J1:7e4:prevl6:result3:HIT5:coordl1:G2:10e4:prevl6:result4:MISS5:coordl1:E1:7e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:A1:3e4:prevl6:result4:MISS4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:H1:3e4:prevl6:result4:MISS4:prevl4:prevl4:prevl4:prevl5:coordl1:A1:7e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:I2:10e4:prevl6:result3:HIT4:prevl6:result4:MISS5:coordl1:G1:3e4:prevl4:prevl6:result3:HIT4:prevl6:result3:HIT5:coordl1:G1:7e4:prevl4:prevl4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:F1:5e4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl6:result3:HIT5:coordl1:A1:4e4:prevl4:prevl6:result4:MISS5:coordl1:B1:7e4:prevl5:coordl1:D1:6e4:prevl6:result4:MISS4:prevl5:coordl1:H1:5e4:prevl5:coordl1:J1:6e6:result3:HIT4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:B1:3e6:result3:HIT4:prevl4:prevl5:coordl1:E1:3e6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:5e4:prevl4:prevl4:prevl5:coordl1:A1:4e4:prevl4:prevl5:coordl1:I1:5e4:prevl5:coordl1:F1:9e6:result4:MISS4:prevl5:coordl1:J1:8e6:result4:MISS4:prevl5:coordl1:B1:5e4:prevl6:result4:MISS4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:I1:6e6:result4:MISS4:prevl6:result3:HIT4:prevl5:coordl1:H1:2e4:prevl5:coordl1:I1:8e6:result4:MISS4:prevl6:result4:MISS5:coordl1:C1:7e4:prevl4:prevl5:coordl1:F1:6e4:prevl5:coordl1:E1:1e6:result4:MISS4:prevl5:coordl1:A1:2e4:prevl4:prevl5:coordl1:A1:9e4:prevl4:prevl5:coordl1:B1:2e6:result4:MISS4:prevl5:coordl1:D1:7e6:result4:MISS4:prevl5:coordl1:F1:1e6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:3e4:prevl4:prevl5:coordl1:J1:2e6:result3:HIT4:prevl6:result3:HIT5:coordl1:I1:7e4:prevl4:prevl4:prevl5:coordl1:C1:5e4:prevl5:coordl1:H1:6e6:result4:MISS4:prevl5:coordl1:D1:2e4:prevl5:coordl1:E1:4e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:B1:2e6:result4:MISS4:prevl5:coordl1:E2:10e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:H1:8e6:result4:MISS4:prevl5:coordl1:I1:7e6:result4:MISS4:prevl4:prevl5:coordl1:A1:1e4:prevl6:result4:MISS4:prevl5:coordl1:C1:4e4:prevl4:prevl4:prevl5:coordl1:I1:5e6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:2e4:prevl6:result4:MISS5:coordl1:A1:5e4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:I1:6e6:result3:HIT4:prevl4:prevl6:result3:HIT4:prevl6:result4:MISS4:prevl5:coordl1:F1:2e4:prevl4:prevl5:coordl1:E2:10e4:prevl5:coordl1:G1:8e6:result4:MISS4:prevl5:coordl1:B1:8e4:prevl5:coordl1:E1:8e6:result4:MISS4:prevl6:result4:MISS5:coordl1:F1:3e4:prevl4:prevl6:result3:HIT4:prevl6:result4:MISS5:coordl1:B1:3e4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:A1:8ee6:result4:MISS5:coordl1:H1:9ee5:coordl1:E1:5ee6:result4:MISS5:coordl1:H2:10ee5:coordl1:C1:8e6:result4:MISSee5:coordl1:F1:4ee5:coordl1:D1:7e6:result4:MISSeee6:result4:MISSee6:result4:MISSe5:coordl1:G1:9e6:result4:MISSe6:result4:MISSe5:coordl1:G1:4ee5:coordl1:H1:1ee5:coordl1:C1:3e6:result4:MISSee6:result4:MISS5:coordl1:G1:6ee5:coordl1:I1:3eeeee6:result4:MISS5:coordl1:H1:4ee6:result4:MISS5:coordl1:A1:7ee6:result4:MISSe5:coordl1:G1:1ee6:result4:MISSe6:result4:MISS5:coordl1:G1:5eeee5:coordl1:J1:1ee5:coordl1:C1:1e6:result3:HITe5:coordl1:C1:6eeee5:coordl1:A1:6ee6:result4:MISS5:coordl1:C1:7eee6:result4:MISSee6:result4:MISSe6:result4:MISS5:coordl1:F1:7ee5:coordl1:A1:2e6:result3:HITeee6:result3:HIT5:coordl1:J1:8eeeeee6:result3:HIT5:coordl1:B1:5ee6:result4:MISSe6:result4:MISS5:coordl1:H1:6ee6:result3:HITee6:result4:MISSe6:result3:HIT5:coordl1:C1:3eeee6:result4:MISSe5:coordl1:E1:4eee6:result3:HIT5:coordl1:I2:10ee5:coordl1:E1:6e6:result3:HITe5:coordl1:B2:10e6:result4:MISSe6:result3:HIT5:coordl1:F1:8ee5:coordl1:F1:9ee6:result4:MISSeee6:result4:MISSe6:result4:MISS5:coordl1:D1:1ee6:result4:MISSe5:coordl1:G1:7e6:result3:HITe6:result3:HIT5:coordl1:E1:8eeee6:result4:MISS5:coordl1:I1:8eee5:coordl1:A2:10e6:result4:MISSe5:coordl1:J2:10eee6:result4:MISSe5:coordl1:J1:5ee6:result4:MISSee6:result3:HIT5:coordl1:J1:9eee5:coordl1:H2:10ee5:coordl1:I1:2ee5:coordl1:I1:4e6:result4:MISSee5:coordl1:B1:1e6:result4:MISSe6:result4:MISS5:coordl1:D2:10ee5:coordl1:A1:3e6:result4:MISSe6:result3:HIT5:coordl1:B1:8eee5:coordl1:G2:10ee6:result4:MISS5:coordl1:C1:1eee5:coordl1:H1:7eee5:coordl1:H1:8ee6:result4:MISS5:coordl1:F1:4eee6:result4:MISS5:coordl1:J1:9ee5:coordl1:G1:5e6:result4:MISSe6:result4:MISS5:coordl1:F2:10ee5:coordl1:E1:6eee5:coordl1:G1:2e6:result3:HITe5:coordl1:C1:6e6:result4:MISSe5:coordl1:J1:7ee6:result4:MISSe5:coordl1:D2:10ee5:coordl1:D1:9ee5:coordl1:F2:10eeee6:result4:MISSe5:coordl1:A2:10eeee6:result4:MISS5:coordl1:A1:1ee5:coordl1:I1:2e6:result4:MISSe6:result4:MISSee6:result3:HIT5:coordl1:D1:8eee6:result4:MISS5:coordl1:B1:9ee6:result3:HIT5:coordl1:G1:3ee5:coordl1:D1:2ee6:result4:MISSee6:result4:MISS5:coordl1:F1:8ee5:coordl1:D1:3ee5:coordl1:A1:9e6:result4:MISSe5:coordl1:E1:2e6:result4:MISSe5:coordl1:G1:8e6:result4:MISSe5:coordl1:C1:5e6:result4:MISSee6:result4:MISSe5:coordl1:A1:6e6:result4:MISSe6:result4:MISSe5:coordl1:B1:4e6:result4:MISSe5:coordl1:J1:2eee5:coordl1:E1:9ee5:coordl1:G1:9e6:result4:MISSe6:result4:MISS5:coordl1:E1:1ee6:result4:MISS5:coordl1:B1:6ee6:result4:MISSe5:coordl1:D1:5e6:result4:MISSe6:result4:MISSe5:coordl1:F1:6ee6:result4:MISS5:coordl1:C1:8eee6:result4:MISSe5:coordl1:E1:9ee6:result4:MISS5:coordl1:F1:2eeee5:coordl1:D1:1e6:result4:MISSe6:result4:MISSe5:coordl1:D1:3e6:result4:MISSe6:result4:MISSee5:coordl1:D1:5ee6:result4:MISSeeee6:result4:MISS5:coordl1:B1:7eeee6:result3:HIT5:coordl1:J1:4ee5:coordl1:G1:6e6:result4:MISSe5:coordl1:J1:3e6:result3:HITe6:result4:MISSe5:coordl1:C1:9e6:result4:MISSe6:result3:HITee6:result3:HITe"
    wonGame = "l6:result3:HIT4:prevl6:result3:HIT5:coordl1:H1:6e4:prevl4:prevl6:result4:MISS5:coordl1:H1:8e4:prevl4:prevl6:result4:MISS5:coordl1:J1:9e4:prevl5:coordl1:G1:1e6:result3:HIT4:prevl6:result3:HIT5:coordl1:I1:9e4:prevl5:coordl1:I1:9e4:prevl4:prevl4:prevl5:coordl1:E1:2e6:result4:MISS4:prevl5:coordl1:E1:3e4:prevl5:coordl1:D1:7e6:result4:MISS4:prevl6:result4:MISS5:coordl1:D1:2e4:prevl6:result4:MISS5:coordl1:G1:5e4:prevl4:prevl6:result3:HIT5:coordl1:G1:3e4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:J1:8e4:prevl5:coordl1:I1:2e6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:I1:6e6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:D1:5e4:prevl4:prevl4:prevl5:coordl1:H1:9e6:result4:MISS4:prevl6:result3:HIT4:prevl4:prevl5:coordl1:J1:7e4:prevl4:prevl5:coordl1:B1:4e6:result4:MISS4:prevl4:prevl5:coordl1:D1:3e6:result4:MISS4:prevl6:result3:HIT5:coordl1:D1:3e4:prevl4:prevl4:prevl4:prevl6:result3:HIT4:prevl5:coordl1:G1:4e6:result4:MISS4:prevl4:prevl5:coordl1:B1:8e4:prevl5:coordl1:C1:1e6:result4:MISS4:prevl5:coordl1:F1:1e6:result4:MISS4:prevl4:prevl5:coordl1:F1:4e6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:C1:5e4:prevl5:coordl1:E1:1e4:prevl5:coordl1:D1:6e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:E1:4e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:A1:5e4:prevl4:prevl4:prevl5:coordl1:J1:9e6:result3:HIT4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:I1:6e4:prevl4:prevl4:prevl6:result3:HIT5:coordl1:A1:8e4:prevl5:coordl1:A2:10e4:prevl4:prevl5:coordl1:B1:6e4:prevl5:coordl1:H2:10e6:result3:HIT4:prevl6:result4:MISS5:coordl1:A1:3e4:prevl6:result4:MISS5:coordl1:B1:1e4:prevl4:prevl6:result4:MISS5:coordl1:D1:7e4:prevl5:coordl1:I1:7e6:result4:MISS4:prevl6:result3:HIT4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:D1:4e6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:B1:1e4:prevl5:coordl1:A1:2e4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:I1:3e4:prevl4:prevl4:prevl5:coordl1:C1:8e6:result4:MISS4:prevl5:coordl1:H1:4e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:I1:2e4:prevl5:coordl1:H1:2e6:result4:MISS4:prevl5:coordl1:D1:9e6:result4:MISS4:prevl5:coordl1:C1:8e4:prevl5:coordl1:H1:8e4:prevl5:coordl1:D1:5e4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:G1:9e4:prevl4:prevl6:result3:HIT5:coordl1:B1:3e4:prevl5:coordl1:C1:2e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:D2:10e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:D1:1e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:G1:8e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:G1:6e6:result4:MISS4:prevl6:result4:MISS5:coordl1:C1:5e4:prevl6:result4:MISS5:coordl1:C2:10e4:prevl4:prevl5:coordl1:J2:10e6:result4:MISS4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:G1:8e6:result3:HIT4:prevl4:prevl6:result4:MISS4:prevl6:result3:HIT4:prevl6:result4:MISS5:coordl1:J1:1e4:prevl4:prevl4:prevl5:coordl1:I1:3e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:E1:4e6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:4e4:prevl6:result4:MISS5:coordl1:J1:4e4:prevl4:prevl5:coordl1:H1:3e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:I1:4e4:prevl6:result3:HIT5:coordl1:E1:5e4:prevl6:result4:MISS5:coordl1:H1:2e4:prevl5:coordl1:C1:7e6:result3:HIT4:prevl6:result4:MISS5:coordl1:G1:7e4:prevl5:coordl1:A1:1e4:prevl5:coordl1:F1:5e4:prevl5:coordl1:B2:10e4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:F1:4e4:prevl5:coordl1:I1:1e4:prevl6:result4:MISS5:coordl1:E1:7e4:prevl5:coordl1:F2:10e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:F2:10e6:result3:HIT4:prevl6:result3:HIT4:prevl4:prevl5:coordl1:B2:10e6:result3:HIT4:prevl4:prevl5:coordl1:A1:9e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:G1:1e4:prevl5:coordl1:D1:8e4:prevl5:coordl1:F1:8e6:result4:MISS4:prevl5:coordl1:E1:9e4:prevl5:coordl1:A1:4e4:prevl4:prevl5:coordl1:F1:9e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:I1:5e4:prevl5:coordl1:G1:5e6:result4:MISS4:prevl5:coordl1:F1:5e6:result3:HIT4:prevl4:prevl6:result4:MISS5:coordl1:A1:8e4:prevl6:result4:MISS5:coordl1:G1:2e4:prevl4:prevl5:coordl1:J1:1e6:result4:MISS4:prevl6:result4:MISS5:coordl1:H2:10e4:prevl5:coordl1:C1:7e6:result4:MISS4:prevl5:coordl1:J1:6eeeee5:coordl1:F1:3e6:result4:MISSeee5:coordl1:F1:6e6:result4:MISSeeee5:coordl1:H1:9eee6:result4:MISS5:coordl1:J1:3ee6:result4:MISSe6:result3:HITee6:result4:MISSee6:result4:MISS5:coordl1:A1:1ee5:coordl1:F1:6eee6:result4:MISS5:coordl1:A1:2eee5:coordl1:C2:10e6:result4:MISSe5:coordl1:B1:3eee5:coordl1:C1:9ee6:result3:HIT5:coordl1:C1:4eeee6:result4:MISSee5:coordl1:G1:9ee6:result4:MISSe6:result3:HITe6:result4:MISSeeeeee5:coordl1:A1:9e6:result4:MISSe5:coordl1:H1:7eee5:coordl1:D1:4e6:result4:MISSeeee6:result4:MISS5:coordl1:I1:5ee5:coordl1:H1:1eee5:coordl1:B1:9e6:result4:MISSe6:result3:HIT5:coordl1:E1:2eee5:coordl1:E1:1ee5:coordl1:D1:6ee5:coordl1:I1:8e6:result4:MISSee5:coordl1:G2:10e6:result4:MISSe6:result4:MISS5:coordl1:H1:7ee5:coordl1:H1:1e6:result4:MISSe6:result4:MISS5:coordl1:D1:9eee5:coordl1:E1:6e6:result4:MISSeeee5:coordl1:C1:3e6:result4:MISSe5:coordl1:J1:6ee5:coordl1:B1:8ee6:result4:MISSe5:coordl1:G1:6ee6:result3:HIT5:coordl1:A2:10eee5:coordl1:E1:5e6:result4:MISSe5:coordl1:J1:8ee5:coordl1:I1:7ee6:result3:HITe5:coordl1:E1:8ee6:result4:MISS5:coordl1:J1:7eeee5:coordl1:C1:1e6:result4:MISSee5:coordl1:G1:3ee6:result3:HITe6:result4:MISSe6:result4:MISSeeee5:coordl1:G1:2ee5:coordl1:F1:8eeee6:result4:MISS5:coordl1:C1:2ee5:coordl1:H1:6e6:result4:MISSee5:coordl1:I2:10ee6:result4:MISS5:coordl1:G1:7ee6:result3:HITe6:result4:MISSe5:coordl1:D1:1eee5:coordl1:J1:2e6:result4:MISSe5:coordl1:J2:10ee5:coordl1:F1:3eeee6:result4:MISS5:coordl1:D1:2eeeee6:result4:MISSe5:coordl1:C1:4e6:result4:MISSe6:result4:MISSee6:result4:MISS5:coordl1:G1:4ee5:coordl1:H1:5e6:result4:MISSe6:result4:MISSe6:result4:MISS5:coordl1:A1:7ee5:coordl1:J1:5e6:result4:MISSe5:coordl1:B1:9e6:result4:MISSe6:result3:HIT5:coordl1:J1:2eee6:result4:MISS5:coordl1:A1:7ee5:coordl1:A1:6e6:result4:MISSee5:coordl1:F1:9e6:result3:HITe6:result4:MISS5:coordl1:I1:4ee5:coordl1:E1:6ee5:coordl1:B1:2e6:result4:MISSee5:coordl1:E2:10ee5:coordl1:F1:2ee5:coordl1:G2:10e6:result4:MISSee6:result4:MISSee6:result4:MISS5:coordl1:E1:8eee6:result4:MISS5:coordl1:C1:6eeee6:result4:MISSe5:coordl1:A1:6e6:result3:HITee5:coordl1:D1:8ee5:coordl1:A1:3e6:result4:MISSe6:result4:MISS5:coordl1:E1:9ee6:result4:MISS5:coordl1:E1:7eeee6:result4:MISS5:coordl1:F1:2eee6:result4:MISS5:coordl1:I2:10ee6:result3:HITe5:coordl1:F1:7e6:result4:MISSe5:coordl1:A1:5eee6:result4:MISS5:coordl1:B1:5ee5:coordl1:E1:3e6:result4:MISSe6:result4:MISSe5:coordl1:B1:7eee5:coordl1:I1:1e6:result3:HITe5:coordl1:B1:6e6:result3:HITee6:result4:MISSe6:result4:MISS5:coordl1:I1:8ee5:coordl1:C1:3eee5:coordl1:C1:6e6:result4:MISSeeee6:result4:MISSee6:result4:MISS5:coordl1:J1:5ee5:coordl1:J1:3e6:result4:MISSe6:result3:HITeeee5:coordl1:D2:10e6:result3:HITee6:result4:MISS5:coordl1:F1:7eee5:coordlee"
    a = "l5:coordl1:B1:1e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:G1:1e6:result4:MISS4:prevl4:prevl5:coordl1:F1:4e6:result3:HIT4:prevl5:coordl1:A2:10eee6:result4:MISS5:coordl1:H1:8eee5:coordl1:H1:9ee6:result4:MISS5:coordl1:B1:7eee"
    simple = "l6:result4:MISS5:coordl1:H1:3e4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:A2:10ee6:result3:HIT5:coordl1:B1:6ee5:coordl1:B1:3e6:result4:MISSe5:coordl1:F1:1ee5:coordl1:C1:1e6:result4:MISSe5:coordl1:H1:1eee"
    simpleD = "l5:coordl1:F1:9e6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:J1:6e4:prevl6:result4:MISS5:coordl1:J2:10e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:G1:5e6:result4:MISS4:prevl6:result4:MISS5:coordl1:C1:4e4:prevl4:prevl5:coordl1:F1:2e4:prevl5:coordl1:D1:8e6:result4:MISS4:prevl5:coordl1:H1:1e4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:J1:5e4:prevl5:coordl1:G1:6e4:prevl5:coordl1:C2:10e4:prevl6:result4:MISS5:coordl1:E2:10e4:prevl6:result4:MISS4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:D1:1e6:result4:MISS4:prevl4:prevl4:prevl4:prevl5:coordl1:G1:2e6:result4:MISS4:prevl6:result4:MISS5:coordl1:E1:8e4:prevl6:result4:MISS5:coordl1:H2:10e4:prevl5:coordl1:D1:8e6:result4:MISS4:prevl4:prevl4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:H1:4e6:result4:MISS4:prevl5:coordl1:G1:8e6:result3:HIT4:prevl4:prevl6:result4:MISS5:coordl1:D1:4e4:prevl4:prevl5:coordl1:A1:6e4:prevl5:coordl1:C2:10e6:result4:MISS4:prevl5:coordl1:F1:1e6:result3:HIT4:prevl4:prevl5:coordl1:I1:6e6:result4:MISS4:prevl5:coordl1:A1:4e6:result4:MISS4:prevl4:prevl5:coordl1:E1:6e4:prevl4:prevl4:prevl5:coordl1:H1:5e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:F1:3e4:prevl4:prevl5:coordl1:C1:5e4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:B1:8e6:result3:HIT4:prevl4:prevl5:coordl1:I1:8e6:result3:HIT4:prevl5:coordl1:A2:10e6:result3:HIT4:prevl4:prevl5:coordl1:D1:3e6:result4:MISS4:prevl4:prevl5:coordl1:E1:3e6:result4:MISS4:prevl6:result4:MISS5:coordl1:C1:6e4:prevl6:result4:MISS4:prevl4:prevl6:result3:HIT5:coordl1:E1:4e4:prevl4:prevl5:coordl1:G1:5e4:prevl6:result4:MISS4:prevl6:result3:HIT5:coordl1:D1:6e4:prevl5:coordl1:G1:3e4:prevl6:result3:HIT5:coordl1:I1:9e4:prevl5:coordl1:B1:2e4:prevl6:result4:MISS4:prevl5:coordl1:B1:5e6:result3:HIT4:prevl5:coordl1:J1:2e4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:F1:8e4:prevl6:result4:MISS5:coordl1:B1:5e4:prevl6:result3:HIT5:coordl1:A1:6e4:prevl5:coordl1:F1:7e4:prevl5:coordl1:F1:2e4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:C1:7e4:prevl5:coordl1:H1:8e4:prevl5:coordl1:J1:1e6:result3:HIT4:prevl5:coordl1:C1:9e6:result3:HIT4:prevl5:coordl1:B1:9e4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:J2:10e6:result4:MISS4:prevl5:coordl1:F1:8e4:prevl6:result3:HIT5:coordl1:B1:6e4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS5:coordl1:H1:8e4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:D1:5e4:prevl6:result4:MISS4:prevl5:coordl1:E1:1e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl5:coordl1:I1:5e4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:F1:5e6:result4:MISS4:prevl5:coordl1:G1:4e4:prevl4:prevl6:result4:MISS4:prevl6:result3:HIT4:prevl5:coordl1:A1:3e4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:I1:1e4:prevl5:coordl1:I1:4e4:prevl4:prevl6:result4:MISS5:coordl1:I1:3e4:prevl5:coordl1:C1:4e6:result4:MISS4:prevl4:prevl5:coordl1:A1:9e4:prevl5:coordl1:B2:10e6:result3:HIT4:prevl6:result4:MISS5:coordl1:I1:6e4:prevl5:coordl1:I1:2e6:result4:MISS4:prevl5:coordl1:B2:10e6:result3:HIT4:prevl4:prevl5:coordl1:G1:4e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:B1:9e4:prevl5:coordl1:C1:3e6:result4:MISS4:prevl5:coordl1:D1:7e4:prevl5:coordl1:G1:2e4:prevl4:prevl5:coordl1:E1:2e6:result3:HIT4:prevl5:coordl1:G1:7e6:result4:MISS4:prevl6:result4:MISS5:coordl1:E1:7e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:E1:5e6:result4:MISS4:prevl5:coordl1:F2:10eee5:coordl1:B1:6ee5:coordl1:H1:7eeeee5:coordl1:G1:8e6:result4:MISSe6:result4:MISSe6:result4:MISSee6:result4:MISSe5:coordl1:H1:7e6:result3:HITe5:coordl1:A1:7e6:result4:MISSe5:coordl1:H1:9eee6:result3:HIT5:coordl1:J1:9eeeeee6:result3:HITe5:coordl1:H1:2e6:result4:MISSeee6:result4:MISS5:coordl1:G1:9ee6:result4:MISSe6:result4:MISSe5:coordl1:G1:9ee6:result4:MISS5:coordl1:C1:5ee6:result4:MISSe5:coordl1:F1:1ee5:coordl1:G1:1ee6:result4:MISS5:coordl1:J1:4ee6:result4:MISSee5:coordl1:G2:10ee5:coordl1:D1:2e6:result4:MISSe6:result4:MISSe6:result4:MISS5:coordl1:E1:9ee5:coordl1:D1:1eee5:coordl1:A1:1eee5:coordl1:E2:10e6:result4:MISSe6:result4:MISS5:coordl1:J1:9eee6:result4:MISS5:coordl1:G1:1ee5:coordl1:H1:6eee6:result4:MISSee5:coordl1:B1:8e6:result4:MISSe5:coordl1:F1:3ee6:result4:MISSeee6:result3:HITee5:coordl1:E1:3e6:result4:MISSe5:coordl1:H1:3e6:result4:MISSe6:result4:MISSe6:result4:MISSeee6:result4:MISSe6:result4:MISS5:coordl1:A1:9ee5:coordl1:D1:4ee6:result4:MISSee5:coordl1:D1:7ee6:result4:MISSee6:result3:HITee5:coordl1:H1:2ee6:result3:HITe5:coordl1:E1:7e6:result4:MISSee6:result4:MISS5:coordl1:E1:4ee5:coordl1:J1:7eeee5:coordl1:D1:9e6:result4:MISSee5:coordl1:I1:9e6:result4:MISSeee5:coordl1:I1:1e6:result3:HITee5:coordl1:A1:7e6:result3:HITe5:coordl1:F1:4ee6:result4:MISSe6:result4:MISS5:coordl1:C1:1eee5:coordl1:F2:10eee5:coordl1:A1:1e6:result4:MISSe6:result4:MISS5:coordl1:C1:9ee6:result4:MISSe5:coordl1:F1:5e6:result4:MISSeee6:result4:MISS5:coordl1:F1:7eeee6:result4:MISSe6:result4:MISS5:coordl1:J1:8eee5:coordl1:F1:6e6:result4:MISSeee6:result4:MISS5:coordl1:A1:5ee5:coordl1:B1:7e6:result3:HITe5:coordl1:A1:2e6:result3:HITe5:coordl1:J1:5e6:result3:HITe6:result4:MISS5:coordl1:J1:4ee6:result4:MISS5:coordl1:C1:7eeeeee5:coordl1:E1:9e6:result4:MISSe6:result4:MISS5:coordl1:I1:3ee5:coordl1:B1:1e6:result4:MISSee5:coordl1:J1:8e6:result4:MISSe6:result4:MISS5:coordl1:H1:9ee5:coordl1:D1:5ee6:result4:MISS5:coordl1:J1:1ee5:coordl1:B1:2e6:result4:MISSe6:result4:MISS5:coordl1:C1:8ee5:coordl1:B1:4eee6:result4:MISSe6:result3:HITee5:coordl1:E1:8ee6:result4:MISSee6:result4:MISSe5:coordl1:D1:6e6:result4:MISSeee5:coordl1:E1:1ee5:coordl1:G2:10e6:result4:MISSe5:coordl1:E1:6e6:result4:MISSe5:coordl1:F1:9ee5:coordl1:B1:3ee5:coordl1:E1:2e6:result4:MISSe5:coordl1:H1:4ee5:coordl1:A1:3eee6:result3:HITe6:result4:MISS5:coordl1:J1:6ee5:coordl1:J1:7e6:result4:MISSee"
    simpleA = "l5:coordl1:A1:4ee"
    simpleB = "l6:result4:MISS5:coordl1:J1:6e4:prevl5:coordl1:D1:6e4:prevl6:result4:MISS5:coordl1:I1:2e4:prevl5:coordl1:G1:8e4:prevl5:coordl1:F1:5e6:result4:MISS4:prevl5:coordl1:C1:1e6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:B1:6e4:prevl5:coordl1:D2:10e4:prevl5:coordl1:E1:3e6:result3:HIT4:prevl6:result3:HIT5:coordl1:A1:6e4:prevl6:result4:MISS5:coordl1:J1:4e4:prevl5:coordl1:B1:6eeeee6:result4:MISSe6:result4:MISSe5:coordl1:F1:3eeeeeeee6:result4:MISSee6:result4:MISSee"
    simpleC = "l5:coordleeeeeee4:prevl5:coordl1:A1:Ae6:result4:MISS4:prevl5:coordl1:A1:Ae4:prevl5:coordl1:A1:Ae6:result4:MISS4:prevl5:coordl1:A1:Ae4:prevl5:coordl1:D2:10e6:result4:MISS4:prevl5:coordl1:D1:1e6:result4:MISS4:prevl6:result3:HIT4:prevl5:coordl1:G1:7e4:prevl6:result4:MISS4:prevl5:coordl1:D1:3e6:result4:MISS4:prevl4:prevl6:result3:HIT4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:I1:2e4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:F1:2e4:prevl4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:H2:10e6:result3:HIT4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:C1:3e6:result4:MISS4:prevl5:coordl1:D1:5e4:prevl5:coordl1:H1:6e6:result4:MISS4:prevl5:coordl1:G1:3e6:result3:HIT4:prevl6:result4:MISS5:coordl1:J1:3e4:prevl5:coordl1:H1:5e4:prevl5:coordl1:I1:8e4:prevl5:coordl1:A1:9e6:result4:MISS4:prevl6:result3:HIT5:coordl1:B1:1e4:prevl5:coordl1:J1:1e4:prevl5:coordl1:C1:6e4:prevl6:result4:MISS5:coordl1:C1:1e4:prevl5:coordl1:G1:8e4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:1e4:prevl4:prevl4:prevl4:prevl5:coordl1:A1:4e4:prevl4:prevl5:coordl1:H1:8e6:result4:MISS4:prevl5:coordl1:E1:1e6:result4:MISS4:prevl5:coordl1:H2:10e4:prevl5:coordl1:H1:7e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:H1:4e4:prevl6:result4:MISS5:coordl1:E1:3e4:prevl6:result4:MISS5:coordl1:B1:6e4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl6:result3:HIT5:coordl1:B1:2e4:prevl6:result4:MISS4:prevl5:coordl1:I1:3e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl4:prevl6:result4:MISS5:coordl1:B2:10e4:prevl6:result4:MISS5:coordl1:B1:1e4:prevl6:result4:MISS4:prevl5:coordl1:G1:1e4:prevl5:coordl1:G1:3e6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:G1:9e4:prevl6:result4:MISS4:prevl5:coordl1:D1:2e6:result3:HIT4:prevl6:result4:MISS5:coordl1:A2:10e4:prevl5:coordl1:D1:6e6:result4:MISS4:prevl4:prevl4:prevl6:result3:HIT5:coordl1:D1:2e4:prevl6:result4:MISS5:coordl1:A2:10e4:prevl4:prevl5:coordl1:J1:4e6:result4:MISS4:prevl5:coordl1:B1:7e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl4:prevl4:prevl6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl4:prevl4:prevl4:prevl5:coordl1:F1:1e6:result4:MISS4:prevl4:prevl4:prevl4:prevl4:prevl5:coordl1:I1:6e4:prevl6:result4:MISS5:coordl1:H1:3e4:prevl4:prevl6:result4:MISS5:coordl1:J1:5e4:prevl5:coordl1:B1:8e6:result4:MISS4:prevl4:prevl5:coordl1:H1:9e6:result4:MISS4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:F1:4e4:prevl6:result4:MISS5:coordl1:A1:7e4:prevl5:coordl1:C1:4e4:prevl4:prevl5:coordl1:A1:3e6:result3:HIT4:prevl5:coordl1:I1:1e6:result4:MISS4:prevl4:prevl6:result4:MISS4:prevl6:result3:HIT4:prevl6:result4:MISS5:coordl1:A1:4e4:prevl4:prevl6:result3:HIT5:coordl1:A1:3e4:prevl4:prevl6:result4:MISS4:prevl5:coordl1:I1:7e6:result4:MISS4:prevl6:result4:MISS5:coordl1:G2:10e4:prevl4:prevl5:coordl1:C1:5e6:result4:MISS4:prevl5:coordl1:G1:4e4:prevl6:result3:HIT5:coordl1:B1:5e4:prevl6:result4:MISS5:coordl1:F1:7e4:prevl4:prevl6:result4:MISS4:prevl4:prevl6:result3:HIT5:coordl1:D1:4e4:prevl4:prevl6:result4:MISS5:coordl1:J1:6e4:prevl4:prevl5:coordl1:J1:9e6:result4:MISS4:prevl5:coordl1:E2:10e4:prevl5:coordl1:C1:2e6:result3:HIT4:prevl6:result3:HIT5:coordl1:G1:7e4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:A1:8e4:prevl5:coordl1:A1:1e4:prevl5:coordl1:J1:9e6:result4:MISS4:prevl5:coordl1:C1:5e6:result4:MISS4:prevl5:coordl1:F1:8e4:prevl6:result4:MISS5:coordl1:E1:7e4:prevl4:prevl5:coordl1:B1:5e6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:I1:7e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl6:result3:HIT4:prevl5:coordl1:J1:2e4:prevl4:prevl4:prevl5:coordl1:G1:6e4:prevl5:coordl1:B1:8e4:prevl4:prevl5:coordl1:D1:1e4:prevl5:coordl1:I1:5e4:prevl5:coordl1:F1:7e4:prevl5:coordl1:E1:5e6:result4:MISS4:prevl6:result3:HIT5:coordl1:E1:3e4:prevl6:result3:HIT5:coordl1:C2:10e4:prevl6:result4:MISS4:prevl4:prevl4:prevl5:coordl1:B1:6e6:result4:MISS4:prevl5:coordl1:F1:4e6:result3:HIT4:prevl6:result4:MISS4:prevl5:coordl1:H1:9e6:result4:MISS4:prevl5:coordl1:C1:9e4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:I1:4e6:result4:MISS4:prevl6:result4:MISS5:coordl1:E1:8e4:prevl4:prevl6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:B1:4e6:result4:MISS4:prevl6:result4:MISS4:prevl5:coordl1:G1:5e6:result4:MISS4:prevl5:coordl1:C1:4e4:prevl6:result4:MISS4:prevl5:coordl1:D1:3e6:result4:MISS4:prevl6:result4:MISS4:prevl6:result4:MISS5:coordl1:A1:6e4:prevl6:result4:MISS4:prevl5:coordl1:D1:8ee5:coordl1:F1:6eee5:coordl1:J1:4eee5:coordl1:C1:8ee6:result4:MISSee5:coordl1:C1:9eee5:coordl1:E1:7ee5:coordl1:B1:9ee5:coordl1:D1:5e6:result3:HITeee5:coordl1:D1:8ee5:coordl1:G1:5ee6:result4:MISSee5:coordl1:J1:3eeee6:result4:MISS5:coordl1:I1:6ee5:coordl1:I1:4e6:result4:MISSe5:coordl1:I2:10eeeee6:result4:MISSe6:result3:HITe6:result4:MISSe5:coordl1:B2:10e6:result4:MISSe6:result3:HITe6:result4:MISSe5:coordl1:J2:10e6:result3:HITe6:result3:HIT5:coordl1:D2:10ee6:result4:MISSe5:coordl1:E1:1ee5:coordl1:J1:6ee5:coordl1:D1:7eee6:result4:MISS5:coordl1:I1:8ee5:coordl1:G1:1e6:result4:MISSee5:coordl1:E1:5e6:result4:MISSee6:result4:MISSeee6:result3:HITee5:coordl1:I2:10eeee6:result4:MISSee6:result3:HIT5:coordl1:B1:4eee6:result4:MISS5:coordl1:B1:9eee6:result4:MISS5:coordl1:A1:1ee5:coordl1:D1:9ee5:coordl1:J1:7e6:result4:MISSeee6:result4:MISSee6:result4:MISS5:coordl1:F2:10eeee5:coordl1:E1:8ee6:result4:MISS5:coordl1:I1:1eee5:coordl1:E1:9e6:result3:HITee5:coordl1:H1:3ee5:coordl1:A1:9ee5:coordl1:H1:7e6:result4:MISSeee6:result3:HIT5:coordl1:J1:1ee6:result3:HITee6:result4:MISSe6:result4:MISS5:coordl1:H1:2ee6:result4:MISS5:coordl1:G1:8ee5:coordl1:D1:4eee6:result4:MISS5:coordl1:E1:6eeee5:coordl1:F1:9e6:result4:MISSee6:result4:MISSe6:result4:MISS5:coordl1:H1:1ee6:result4:MISS5:coordl1:H1:6ee5:coordl1:F1:6e6:result3:HITe6:result4:MISS5:coordl1:J1:5eee6:result4:MISS5:coordl1:J1:2ee5:coordl1:F1:5e6:result3:HITe5:coordl1:G1:9e6:result4:MISSe5:coordl1:I1:2ee6:result4:MISS5:coordl1:I1:3ee5:coordl1:C2:10ee6:result3:HIT5:coordl1:E1:6ee5:coordl1:G1:6e6:result4:MISSe6:result3:HIT5:coordl1:G1:2ee5:coordl1:D1:7eeee5:coordl1:F1:5e6:result4:MISSeee5:coordl1:I1:5e6:result4:MISSe6:result4:MISS5:coordl1:C1:6eeeee5:coordl1:D1:6ee6:result4:MISSe5:coordl1:A1:7eee6:result4:MISSe5:coordl1:C1:8eeee6:result3:HIT5:coordl1:E1:2ee5:coordl1:E1:9e6:result4:MISSe5:coordl1:J1:7eee5:coordl1:I1:9eee6:result4:MISS5:coordl1:B1:3ee5:coordl1:H1:8ee6:result4:MISS5:coordl1:F1:3ee5:coordl1:G1:2e6:result4:MISSe5:coordl1:F1:8e6:result4:MISSeeee5:coordl1:H1:4eee6:result4:MISSeee5:coordl1:E1:2e6:result4:MISSe6:result4:MISSe5:coordl1:F2:10e6:result3:HITe6:result4:MISS5:coordl1:A1:8ee6:result4:MISS5:coordl1:C1:1eee5:coordl1:F1:9ee5:coordl1:J1:8e6:result4:MISSe5:coordl1:A1:2ee5:coordl1:F1:1e6:result3:HITe5:coordl1:D1:9e6:result4:MISSe6:result4:MISS5:coordl1:C1:7ee6:result4:MISSee6:result4:MISSe6:result4:MISSeee6:result4:MISSe6:result4:MISSeeee6:result3:HITee5:coordl1:E2:10ee5:coordl1:B1:7ee6:result4:MISS5:coordl1:A1:5eee6:result4:MISS5:coordl1:H1:2ee5:coordl1:F1:3e6:result4:MISSe5:coordl1:A1:6e6:result4:MISSe6:result4:MISS5:coordl1:G1:4ee6:result4:MISS5:coordl1:C1:3eee6:result4:MISS5:coordl1:G2:10ee6:result4:MISS5:coordl1:B1:3eee5:coordl1:I1:9ee5:coordl1:B1:2ee5:coordl1:C1:7e6:result4:MISSee5:coordl1:E1:4ee6:result4:MISSe5:coordl1:C1:2eeee6:result4:MISSee6:result4:MISSee6:result3:HITe"
